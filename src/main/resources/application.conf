akka {
    loglevel = "INFO"
}

mySpecialConfig {
    akka {
        loglevel = "INFO"
    }
}


specialTimedAssertionConfig {
    akka.test.single-expect-default = 0.9s
}

interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
           filter-leeway = 4s
        }
    }
}

routersDemo {
  akka {
    actor.deployment {
      /poolMaster2 {
        router = round-robin-pool
        nr-of-instances = 5
      }
      /groupMaster2 {
        router = round-robin-group
        routees.paths = ["/user/slave_1", "/user/slave_2", "/user/slave_3", "/user/slave_4", "/user/slave_5"]
      }
    }
  }
}

my-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 1
    }
    throughput = 30
}

dispatchersDemo {

    akka.actor.deployment {
        /rtjvm {
            dispatcher = my-dispatcher
        }
    }

}

mailboxesDemo {

    support-ticket-dispatcher {
        mailbox-type = "com.example.Mailboxes$SupportTicketPriorityMailbox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }

    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}

dedicated-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size = 5
    }
}